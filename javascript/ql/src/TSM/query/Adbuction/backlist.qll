module BlackList {
    predicate getRep(string repr, string t){
        t = "snk" and
        // Unlikely
        repr in ["(member business_type (member client (member body (parameter req *))))", "(member category (member client (member body (parameter req *))))", "(parameter 0 (instance (member deltaPrice *)))", "(parameter 0 (instance (member fee *)))", "(parameter 0 (instance (member SwixerNodes *)))", "(parameter 0 (instance (parameter 0 (member addEntity (member exports *)))))", "(parameter 0 (instance (parameter model (member addEntity (member exports *)))))", "(parameter 0 (member accs (member $pull *)))", "(parameter 0 (member business_type (member client (member body (parameter req *)))))", "(parameter 0 (member category (member client (member body (parameter req *)))))", "(parameter 0 (member password (member data (parameter user *))))", "(parameter 0 (member post (parameter 1 (return (member render *)))))", "(parameter 0 (parameter 0 (return (member splice (member chatStories *)))))", "(parameter 0 (return (member checkCode (parameter user *))))", "(parameter 0 (return (member comparePassword (member user (member session *)))))", "(parameter 0 (return (member deltaPrice *)))", "(parameter 0 (return (member equals (member _id (parameter item *)))))", "(parameter 0 (return (member fee *)))", "(parameter 0 (return (member findById (member CertTransModel (member exports *)))))", "(parameter 0 (return (member findById (member Ipv6ZoneModel (member exports *)))))", "(parameter 0 (return (member findById (member IpZoneModel (member exports *)))))", "(parameter 0 (return (member findById (member User *))))", "(parameter 0 (return (member findById (member ZoneModel (member exports *)))))", "(parameter 0 (return (member findByIdAndUpdate (return (member getModel *)))))", "(parameter 0 (return (member findComments (return (member model *)))))", "(parameter 0 (return (member get2FA *)))", "(parameter 0 (return (member indexOf (member imageUrl (member currentPost *)))))", "(parameter 0 (return (member indexOf (member imageUrl (parameter data *)))))", "(parameter 0 (return (member indexOf (member participants (member request *)))))", "(parameter 0 (return (member indexOf (member participants (parameter savedRequest *)))))", "(parameter 0 (return (member indexOf (member participantsAgents (parameter request *)))))", "(parameter 0 (return (member indexOf (member participantsBots (parameter request *)))))", "(parameter 0 (return (member indexOf (member users (parameter doc *)))))", "(parameter 0 (return (member indexOf (member usersWithShareAccess (parameter doc *)))))", "(parameter 0 (return (member insert (member collection (member advisor *)))))", "(parameter 0 (return (member insert (member collection (member block *)))))", "(parameter 0 (return (member insert (member collection (member checksheet *)))))", "(parameter 0 (return (member insert (member collection (member class *)))))", "(parameter 0 (return (member insert (member collection (member department *)))))", "(parameter 0 (return (member insert (member collection (member root *)))))", "(parameter 0 (return (member insert (member collection (member student *)))))", "(parameter 0 (return (member push (member chatStories (parameter biblioteca *)))))", "(parameter 0 (return (member push (member imageUrl (member currentPost *)))))", "(parameter 0 (return (member push (member imageUrl (parameter data *)))))", "(parameter 0 (return (member push (member log (parameter room *)))))", "(parameter 0 (return (member push (member members (parameter group *)))))", "(parameter 0 (return (member push (member pageHints (parameter user *)))))", "(parameter 0 (return (member push (member relatos (parameter biblioteca *)))))", "(parameter 0 (return (member push (member statusboard (parameter status *)))))", "(parameter 0 (return (member push (member usersWithShareAccess (parameter doc *)))))", "(parameter 0 (return (member push (member walls (parameter biblioteca *)))))", "(parameter 0 (return (member remove (parameter 0 (member removeEntityBy *)))))", "(parameter 0 (return (member remove (parameter model (member removeEntityBy *)))))", "(parameter 0 (return (member sort (return (member lean *)))))", "(parameter 0 (return (member splice (member _tracks (parameter playlist *)))))", "(parameter 0 (return (member SwixerNodes *)))", "(parameter 0 (return (parameter 0 (member addEntity (member exports *)))))", "(parameter 0 (return (parameter 0 (return (member removeEntityBy *)))))", "(parameter 0 (return (parameter model (member addEntity (member exports *)))))", "(parameter 1 (return (member register (member Person (global)))))", "(parameter 0 (instance (member feeExpressCountry *)))", "(parameter 0 (member password (instance (return (member model *)))))", "(parameter 0 (member password (return (return (member model *)))))", "(parameter 0 (parameter 0 (return (member splice (member relatos *)))))", "(parameter 0 (parameter 0 (return (member splice (member walls *)))))", "(parameter 0 (return (member checkPassword (parameter user *))))", "(parameter 0 (return (member comparePasswrod (member user (member session *)))))", "(parameter 0 (return (member feeExpressCountry *)))", "(parameter 0 (return (member findByIdAndUpdate (return (member model *)))))", "(parameter 0 (return (member generateHash (parameter user *))))", "(parameter 0 (return (member id (member opiniones (parameter relato *)))))", "(parameter 0 (return (member indexOf (member compartidoFacebook (member estadistica *)))))", "(parameter 0 (return (member indexOf (member compartidoGoogle (member estadistica *)))))", "(parameter 0 (return (member indexOf (member compartidoTwitter (member estadistica *)))))", "(parameter 0 (return (member indexOf (member reporters *))))", "(parameter 0 (return (member push (member compartidoFacebook (member estadistica *)))))", "(parameter 0 (return (member push (member compartidoGoogle (member estadistica *)))))", "(parameter 0 (return (member push (member compartidoTwitter (member estadistica *)))))", "(parameter 0 (return (member push (member grid (parameter user *)))))", "(parameter 0 (return (member push (member likers (member estadistica *)))))", "(parameter 0 (return (member push (member participants (parameter request *)))))", "(parameter 0 (return (member push (member statusboard *))))", "(parameter 0 (return (member setPassword (parameter user *))))", "(parameter 0 (return (member validateResetToken (parameter user *))))", "(parameter 2 (parameter 1 (return (parameter 3 (member checkIn *)))))", "(parameter 2 (parameter 1 (return (parameter 3 (member checkOut *)))))", "(parameter 2 (parameter 1 (return (parameter 3 (member waiverIn *)))))", "(parameter 2 (parameter 1 (return (parameter callback (member checkIn *)))))", "(parameter 2 (parameter 1 (return (parameter callback (member checkOut *)))))", "(parameter 2 (parameter 1 (return (parameter callback (member waiverIn *)))))", "(member _id (instance (return (member model *))))", "(member _id (return (return (member model *))))", "(parameter 0 (member _id (parameter 0 (return (member update *)))))", "(parameter 0 (member projectIdea (parameter 1 (return (member render *)))))", "(parameter 0 (return (member comparePassword (member user *))))", "(parameter 0 (return (member error (member defaultLogger *))))", "(parameter 0 (return (member indexOf (member banned_rooms *))))", "(parameter 0 (return (member indexOf (member chatStories (parameter biblioteca *)))))", "(parameter 0 (return (member indexOf (member relatos (parameter biblioteca *)))))", "(parameter 0 (return (member indexOf (member visitas (member estadistica *)))))", "(parameter 0 (return (member indexOf (member walls (parameter biblioteca *)))))", "(parameter 0 (return (member push (member notes (parameter zoneInDB *)))))", "(parameter 0 (return (member push (member participantsAgents (parameter request *)))))", "(parameter 0 (return (member push (member participantsBots (parameter request *)))))", "(parameter 0 (return (member push (member visitas (member estadistica *)))))", "(parameter 0 (instance (member ObjectId (member Types (root https://www.npmjs.com/package/mongoose)))))", "(parameter 0 (return (member authenticate (parameter user *))))", "(parameter 0 (return (member comparePassword (parameter user *))))", "(parameter 0 (return (member id (member gifs (member currentUser *)))))", "(parameter 0 (return (member id (member list (member user *)))))", "(parameter 0 (return (member id (member list (parameter user *)))))", "(parameter 0 (return (member id (member projectIdeas (member user *)))))", "(parameter 0 (return (member id (member projectIdeas (parameter user *)))))", "(parameter 0 (return (member indexOf (member participants (parameter request *)))))", "(parameter 0 (return (member limit (return (member populate *)))))", "(parameter 0 (return (member match (member name (parameter obj *)))))", "(parameter 0 (return (member push (member reporters *))))", "(member jugend (instance (return (member model (root https://www.npmjs.com/package/mongoose)))))", "(member jugend (return (return (member model (root https://www.npmjs.com/package/mongoose)))))", "(parameter 0 (instance (member Connection *)))", "(parameter 0 (member password (parameter 0 (return (member create *)))))", "(parameter 0 (member president (parameter 0 (return (member json *)))))", "(parameter 0 (return (member Connection *)))", "(parameter 0 (return (member id (member gifs (parameter user *)))))", "(parameter 0 (return (member indexOf (member likers (member estadistica *)))))", "(parameter 0 (return (member isValid (member ObjectId (member Types *)))))", "(parameter 0 (return (member select (return (member exists *)))))", "(parameter 0 (return (member equals (member _id *))))", "(parameter 0 (return (member push (member skillNames *))))", "(parameter 0 (return (member push (member skills (return findUser)))))", "(parameter 0 (member criminal (parameter 0 (return (member json *)))))", "(parameter 0 (instance (member Person (global))))", "(parameter 0 (return (member Person (global))))", "(parameter 1 (return (member admitUser *)))", "(parameter 0 (member password (member $set *)))", "(parameter 1 (return (member resetAdmissionState *)))", "(parameter 0 (return (member setRole *)))", "(parameter 0 (return (member skip (return (member sort *)))))", "(parameter 1 (return (member rejectUser *)))", "(parameter 2 (return (member filterSensitive *)))"]
        or 
        // Many alerts
        t = "snk" and
        repr in [
            "(parameter 0 (instance (return (member model (root https://www.npmjs.com/package/mongoose)))))", 
            "(parameter 0 (return (return (member model (root https://www.npmjs.com/package/mongoose)))))", 
            "(parameter 0 (return (member findByIdAndUpdate *)))", 
            "(parameter 0 (return (member getByToken *)))", 
            "(parameter 0 (return (member findById (return (member model *)))))", 
            "(parameter 0 (return (member model (root https://www.npmjs.com/package/mongoose))))", 
            "(parameter 2 (return (member model (root https://www.npmjs.com/package/mongoose))))", "(member id (member params (parameter req *)))", 
            "(parameter 0 (return (member count (return (member model *)))))", 
            "(parameter 0 (return (member findById *)))", 
            "(parameter 0 (return (member find (return (member model *)))))"]
                        
        or 
        none()
    }
}