module InclusionList {
    predicate getRep(string repr, string t){
        t = "snk" and
        // likely
        repr in ["(parameter 0 (return (member update *)))","(parameter 1 (return (member update *)))","(parameter 1 (return (member update (return (member model *)))))","(parameter 0 (return (member findByIdAndUpdate *)))","(parameter 0 (return (return (member model (root https://www.npmjs.com/package/mongoose)))))","(parameter 0 (return (member update (return (member model *)))))","(parameter 0 (return (member create *)))","(parameter 0 (return (member remove *)))","(parameter 0 (return (member updateOne (return (member collection *)))))","(parameter 0 (return (member findOneAndRemove *)))","(parameter 0 (return (member update (return (member collection *)))))","(parameter 0 (return (member ObjectId (member Types *))))","(parameter 0 (return (member exists (return (member find *)))))","(parameter 0 (return (member equals (return (member where *)))))","(parameter 0 (return (member getByID *)))","(parameter 0 (return (member findOne (member Skin *))))","(parameter 1 (return (member set *)))","(parameter 0 (return (member remove (return (member model *)))))","(parameter 0 (return (member update (member Service *))))","(parameter 0 (return (member update (member users *))))","(parameter 1 (return (member cache (return (member findOne *)))))","(parameter 0 (return (member findOne (member Account *))))","(parameter 0 (return (member sort (return (member find *)))))","(parameter 0 (return (member findOneAndUpdate (return (member model *)))))","(parameter 0 (member _id (parameter 0 (return (member findOne *)))))","(parameter 0 (return (member findByIdAndRemove *)))","(parameter 0 (return (member findOne (member User *))))","(parameter 0 (return (member findOne (member Customer *))))","(parameter 0 (return (member findOneAndRemove (return (member model *)))))","(parameter 0 (return (member findOne (member Device *))))","(parameter 0 (return (member update (member Request *))))","(parameter -1 (return (member find (member skillNames *))))","(parameter 0 (member criminal (parameter 0 (return (member json *)))))","(parameter 0 (return (member remove (parameter model (member removeEntityBy *)))))","(parameter 1 (return (member findOneAndUpdate (return (member model *)))))","(parameter 0 (return (member findOne (member Person (global)))))","(parameter 1 (return (member findOneAndUpdate *)))","(parameter 0 (member password (member $set *)))","(parameter 0 (return (member countDocuments (member AllDnsModel (member exports *)))))","(parameter 0 (return (member countDocuments (member zgrab2_443_model *))))","(parameter 0 (return (member countDocuments (member zgrab443Model *))))","(parameter 0 (return (member update (member Book *))))","(parameter 0 (return (member update (member advisor *))))","(parameter -1 (return (member push (member skillNames *))))","(parameter 0 (return (member push (member skillNames *))))","(parameter 1 (return (member distinct (return (member collection *)))))","(parameter 0 (return (member isValid (member ObjectId (member Types *)))))","(parameter 0 (member president (parameter 0 (return (member json *)))))","(parameter 0 (return (member findOne (member Circuit *))))","(parameter 0 (return (member findOne (member Service *))))","(parameter 0 (return (member countDocuments *)))","(parameter 0 (return (member indexOf (member participants (parameter request *)))))","(parameter -1 (return (member startsWith (member member *))))","(parameter -1 (return (member replace (member member *))))","(parameter 0 (return (member countDocuments (member censysModel *))))","(parameter 0 (return (member select (return (member exists *)))))","(parameter 0 (return (member select (return (member find *)))))","(parameter 0 (return (member update (member Post *))))","(parameter 0 (return (member connect (root https://www.npmjs.com/package/mongoose))))","(parameter 0 (return (member findOne (member Node *))))","(parameter 0 (return (member findOneAndUpdate (member SwixerNodes *))))","(parameter 0 (return (member update (member user *))))","(parameter 0 (return (member id (member list (member user *)))))","(parameter 0 (return (member id (member projectIdeas (member user *)))))","(parameter 0 (return (member id (member gifs (member currentUser *)))))","(parameter 0 (return (member remove (return (member collection *)))))","(parameter 0 (return (member findOne (member Playlist (global)))))","(parameter 0 (return (member getByEmail *)))","(parameter 0 (return (member checkPassword (parameter user *))))","(parameter 0 (return (member validateProfile *)))","(parameter -1 (return (member toString (parameter id *))))","(parameter 0 (return (member countDocuments (member DeadDnsModel (member exports *)))))","(parameter 0 (return (member equals (member _id *))))","(parameter -1 (return (member map (parameter usuariosID (member addNotificacionFeed *)))))","(parameter 0 (return (member findOne (member student *))))","(parameter 0 (return (member update (member student *))))","(parameter 1 (return (member update (member advisor *))))","(parameter 0 (return (member findOne (member Post *))))","(parameter 0 (return (member update (parameter admin *))))","(parameter -1 (return (member push (member parents *))))","(parameter 0 (return (member push (member parents *))))","(parameter 0 (return (member match (member name (parameter obj *)))))","(parameter 0 (return (member findOne (member Room *))))","(parameter 0 (return (member update (return (member find *)))))","(parameter 0 (return (member pbkdf2Sync (root https://www.npmjs.com/package/crypto))))","(parameter -1 (return (member toLowerCase (member recipient (member body *)))))","(parameter -1 (return (member toLowerCase (member recipient (member event-data *)))))","(parameter 0 (return (member last (root https://www.npmjs.com/package/lodash))))","(parameter 0 (return (member first (root https://www.npmjs.com/package/lodash))))","(parameter 0 (return (member filter (root https://www.npmjs.com/package/lodash))))","(parameter 0 (return (member connect (root https://www.npmjs.com/package/mongoose))))","(parameter 1 (return (member update *)))","(parameter 0 (return (member indexOf (parameter -1 *))))","(parameter -1 (return (member indexOf (parameter -1 *))))","(parameter 0 (parameter -1 (return (member find (parameter -1 *)))))","(parameter 0 (return (parameter 0 (return (member then *)))))","(parameter 1 (return (parameter 0 (return (member then *)))))","(parameter 0 (parameter -1 (return (parameter 0 (parameter -1 *)))))","(parameter 0 (return (member update (parameter -1 (parameter -1 *)))))","(parameter 0 (return (member equals (parameter -1 *))))","(parameter 0 (return (parameter 0 (return (member forEach *)))))","(parameter 0 (return (member id *)))","(parameter 0 (return (member limit (return (member skip *)))))","(parameter 0 (return (member findOneAndRemove *)))","(parameter 0 (return (parameter 0 (return (member run *)))))","(parameter 0 (parameter -1 (return (member count (parameter -1 *)))))","(parameter 0 (return (member deleteOne *)))","(parameter 0 (return (member sort (return (member limit *)))))","(parameter 0 (return (member updateMany *)))","(parameter 0 (return (member remove (return (member collection *)))))","(parameter 0 (return (member find (return (member collection *)))))","(parameter 0 (return (member remove (parameter -1 (parameter -1 *)))))","(parameter 0 (return (member findByIdAndRemove *)))","(parameter 0 (return (member ObjectId (member Types (root https://www.npmjs.com/package/mongoose)))))","(parameter 1 (return (member findOneAndUpdate (return (member model *)))))","(parameter 0 (return (member skip (return (member sort *)))))","(parameter -1 (return (member toString (parameter id *))))","(parameter 0 (return (member findOne (member User *))))","(parameter 1 (return (member findOneAndUpdate (parameter -1 *))))","(parameter 0 (return (member generateHash *)))"]
        or 
        none()
    }
}