module InclusionList {
    predicate getRep(string repr, string t){
        t = "snk" and
        // likely
        repr in ["(parameter 0 (return (member findOneAndRemove *)))","(parameter 0 (return (member findByIdAndUpdate *)))","(parameter 1 (return (member findByIdAndUpdate *)))","(parameter 0 (return (member ObjectId *)))","(parameter 0 (instance (return (member model (root https://www.npmjs.com/package/mongoose)))))","(parameter 0 (return (member sort *)))","(parameter 0 (return (member generateHash *)))","(parameter 0 (return (member create *)))","(parameter 0 (return (member id *)))","(parameter 0 (return (member findByIdAndRemove *)))","(parameter 0 (return (member updateMany *)))","(parameter 0 (return (member countDocuments *)))","(parameter 0 (return (member getByToken *)))","(parameter 0 (return (member equals *)))","(parameter 0 (return (member getByID *)))","(parameter 2 (return (member filterSensitive *)))","(parameter -1 (return (member find (member skillNames *))))","(parameter -1 (return (member push (member skillNames *))))","(parameter 0 (return (member isValid *)))","(parameter 0 (return (member comparePassword *)))","(parameter 0 (return (member getByEmail *)))","(parameter 0 (return (member checkPassword *)))","(parameter 0 (return (member validateProfile *)))","(parameter -1 (return (member push (member parents *))))","(parameter 0 (return (member match *)))","(parameter 0 (return (member deleteOne *)))","(parameter 0 (return (member where *)))","(parameter 0 (return (member comparePasswrod *)))","(parameter 0 (return (member limit *)))","(parameter -1 (return (member toLowerCase (parameter email (member loginWithPassword *)))))","(parameter 1 (return (member resetAdmissionState *)))","(parameter 1 (return (member admitUser *)))","(parameter 1 (return (member rejectUser *)))","(parameter 0 (return (member authenticate *)))","(parameter 0 (return (member model (root https://www.npmjs.com/package/mongoose))))","(parameter 2 (return (member model (root https://www.npmjs.com/package/mongoose))))","(parameter 0 (return (member updateOne *)))","(parameter 0 (return (member exists *)))","(parameter 1 (return (member set *)))","(parameter 1 (return (member cache *)))","(parameter 0 (return (member select *)))","(parameter 0 (member criminal (parameter 0 (return (member json *)))))","(parameter 0 (return (member insert *)))","(parameter 1 (return (member distinct *)))","(parameter 0 (member president (parameter 0 (return (member json *)))))","(parameter -1 (return (member startsWith (parameter member *))))","(parameter -1 (return (member replace (parameter member *))))","(parameter 0 (return (member connect (root https://www.npmjs.com/package/mongoose))))","(parameter -1 (return (member toString (parameter id *))))","(parameter -1 (return (member map (parameter usuariosID (member addNotificacionFeed *)))))"]
        // repr in ["(parameter 0 (return (member push *)))","(parameter 0 (return (member countDocuments *)))","(parameter 0 (return (member getByToken *)))","(parameter 0 (return (member indexOf *)))","(parameter 0 (return (member ObjectId *)))","(parameter 0 (return (member findOneAndRemove *)))","(parameter 0 (return (member findByIdAndUpdate *)))","(parameter 0 (instance (return (member model (root https://www.npmjs.com/package/mongoose)))))","(parameter 0 (return (member create *)))","(parameter 0 (return (member equals *)))","(parameter 0 (return (member updateOne *)))","(parameter 0 (return (member id *)))","(parameter 0 (return (member sort *)))","(parameter 0 (return (member exists *)))","(parameter 0 (return (member getByID *)))","(parameter 1 (return (member findOneAndUpdate *)))","(parameter 1 (return (member set *)))","(parameter 0 (return (member generateHash *)))","(parameter 1 (return (member cache *)))","(parameter 0 (return (member select *)))","(parameter 0 (return (member findByIdAndRemove *)))","(parameter 2 (return (member filterSensitive *)))","(parameter -1 (return (member find *)))","(parameter 0 (member criminal (parameter 0 (return (member json *)))))","(parameter 0 (return (member insert *)))","(parameter 1 (return (member distinct *)))","(parameter 0 (member president (parameter 0 (return (member json *)))))","(parameter 0 (return (member isValid *)))","(parameter -1 (return (member startsWith *)))","(parameter -1 (return (member replace *)))","(parameter 0 (return (member connect (root https://www.npmjs.com/package/mongoose))))","(parameter 0 (return (member comparePassword *)))","(parameter 0 (return (member getByEmail *)))","(parameter 0 (return (member checkPassword *)))","(parameter 0 (return (member validateProfile *)))","(parameter -1 (return (member toString *)))","(parameter -1 (return (member map *)))","(parameter 0 (return (member match *)))","(parameter 0 (return (member deleteOne *)))","(parameter 0 (return (member where *)))","(parameter -1 (return (member toLowerCase *)))","(parameter 0 (return (member updateMany *)))","(parameter -1 (return (member update *)))","(parameter 0 (return (member validateResetToken *)))","(parameter 0 (return (member comparePasswrod *)))","(parameter 0 (return (member limit *)))","(parameter 1 (return (member resetAdmissionState *)))","(parameter 1 (return (member admitUser *)))","(parameter 1 (return (member rejectUser *)))","(parameter 0 (return (member error *)))","(parameter 0 (return (member get2FA *)))","(parameter 0 (return (member feeExpressCountry *)))","(parameter 0 (return (member authenticate *)))","(parameter 0 (return (member Connection *)))","(parameter 0 (return (member count *)))","(parameter -1 (return (member indexOf *)))","(parameter 0 (return (parameter model (member addEntity (member exports *)))))","(parameter 0 (return (member setRole *)))","(parameter 0 (return (member setPassword *)))","(parameter 0 (return (member hashPassword *)))","(parameter 0 (return (member splice *)))","(parameter 0 (return (member Person (global))))","(parameter 1 (return (member register *)))","(parameter 0 (return (member checkCode *)))","(parameter 0 (return (member fee *)))","(parameter 0 (return (member deltaPrice *)))","(parameter 0 (return (member skip *)))","(parameter -1 (return (member filter *)))","(parameter -1 (return (member includes *)))","(parameter 0 (return (member getTPDsByTPD *)))","(parameter 0 (return (member findComments *)))","(parameter 0 (return (member SwixerNodes *)))","(parameter -1 (return (member toHexString *)))","(parameter 0 (return (member find *)))"]
        or 
        none()
    }
}